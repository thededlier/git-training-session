//quick sort using file handling 
#include<iostream>
#include<fstream>
using namespace std;
int Partition(int *A,int start, int end)
{
    int pivot=A[end];
    int partitionIndex=start;
    for(int i=start;i<end;i++)
    {
        if(A[i]<=pivot)
        {
            swap(A[i],A[partitionIndex]); //swap if element is lesser than pivot
            partitionIndex++;
        }
    }
    swap(A[partitionIndex],A[end]); //swap pivot with the element at partition index
    return partitionIndex;
}
void QuickSort(int *A, int start, int end)
{
    if(start<end)
    {
        int partitionIndex=Partition(A,start,end); //calling partition
        QuickSort(A,start,partitionIndex-1);
        QuickSort(A,partitionIndex+1,end);
    }
}
int main()
{
    int A[1001], i;

   // open a file in read mode.
   ifstream obj("mohit.txt");

 //  cout << "\n****Reading from the file****" << endl;

   for(i=0;i<100;i++)
   {
       obj >> A[i];
   }

    QuickSort(A,0,99);
   // cout<<"\n\n****Sorting****";
    cout<<"Sorted List is : ";
    for(i=0;i<100;++i)
    {
        cout<<A[i]<<" ";
    }
    cout<<"\n";
    // close the opened file.
    obj.close();
    return 0;
}
